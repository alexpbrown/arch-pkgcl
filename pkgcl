#!/usr/bin/env ruby

# Author: Alex Brown
# email: code@alexpbrown.me
# license: WTFPL

require 'nokogiri'
require 'open-uri'
require 'optparse'

def colorize(text, color_code)
  "\e[#{color_code}m#{text}\e[0m"
end

options = {}
options[:commits] = 1
options[:show_git_svn] = false

opts = OptionParser.new do |opts|
  opts.banner = "Usage: pkgcl [options] <packages>"
  opts.separator ""

  opts.on("-c", "--commits=NUM", Integer, "Show NUM commit messages") do |n| 
    options[:commits] = n
  end

  opts.on("--show-git-svn-id", "Show git-svn-id messages") do
    options[:show_git_svn] = true
  end

  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
end
opts.parse!(ARGV)

# check for stdin and get package list accordingly
# I even decided to be nice and parse both 'pacman -Qu' and 'pacman -Qqu' on stdin
packages = []
if STDIN.tty? == false
  ARGF.lines do |line|
    packages << line.strip!.split(" ")[0]
  end
else
  packages = ARGV
end

puts opts if packages.empty?

packages.each do |a|
  repo, arch = "", ""
  IO.popen([{"LC_ALL"=>"C"}, "pacman", "-Si", a, :err => :close]) do |io|
    io.lines do |line|
      case line
      when /^Repository(\s?)*: (.+)$/
        repo = $2
      when /^Architecture(\s?)*: (.+)$/
        arch = $2
      end
    end
  end

  if repo.empty? && arch.empty?
    puts "["+colorize(a, 31)+"]"
    puts "Not Found"
    puts
    next
  end

  # I need to get the correct git url from here, since some packages use a
  # different tracking repo (e.g. linux-headers => linux) 
  doc = Nokogiri::HTML(open("http://www.archlinux.org/packages/#{repo}/#{arch}/#{a}"))
  git_link = doc.css("div#actionlist ul li a")[1]['href']

  # get the page with the messages expanded
  doc = Nokogiri::HTML(open("#{git_link}&showmsg=1"))

  print "["+colorize(a, 31)+"]\n"
  options[:commits].times do |n|
    age = doc.css('table.list.nowrap tr.logheader')[n].css('td')[0].content
    header = doc.css('table.list.nowrap td.logsubject')[n].content
    content = doc.css('table.list.nowrap td.logmsg')[n].content

    # Format and print the result
    #content.gsub!(/^/, "\t")
    content.gsub!(/^git-svn-id.*$/, "") unless options[:show_git_svn] == true
    content.strip!
    age.strip!
    puts colorize(header, 4)
    print colorize("Age: ", 37)
    print colorize(age, 36)+" - "
    puts content.empty? ? colorize("None", 32) : colorize(content, 32)
    puts
  end
end
